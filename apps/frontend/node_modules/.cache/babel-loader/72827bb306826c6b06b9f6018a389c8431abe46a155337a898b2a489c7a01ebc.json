{"ast":null,"code":"// Mock login function for authentication\nexport async function login(email, password) {\n  // Simulate API call delay\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (email === 'resident@test.com' && password === '12345') {\n        resolve({\n          token: 'mock-token-123',\n          userId: '1',\n          name: 'Resident User'\n        });\n      } else {\n        reject(new Error('Invalid credentials'));\n      }\n    }, 500);\n  });\n}","map":{"version":3,"names":["login","email","password","Promise","resolve","reject","setTimeout","token","userId","name","Error"],"sources":["C:/Users/HP/OneDrive/Documents/GitHub/EcoCollect/apps/frontend/src/services/api.js"],"sourcesContent":["// Mock login function for authentication\r\nexport async function login(email, password) {\r\n    // Simulate API call delay\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (email === 'resident@test.com' && password === '12345') {\r\n                resolve({\r\n                    token: 'mock-token-123',\r\n                    userId: '1',\r\n                    name: 'Resident User'\r\n                });\r\n            } else {\r\n                reject(new Error('Invalid credentials'));\r\n            }\r\n        }, 500);\r\n    });\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACzC;EACA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCC,UAAU,CAAC,MAAM;MACb,IAAIL,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,OAAO,EAAE;QACvDE,OAAO,CAAC;UACJG,KAAK,EAAE,gBAAgB;UACvBC,MAAM,EAAE,GAAG;UACXC,IAAI,EAAE;QACV,CAAC,CAAC;MACN,CAAC,MAAM;QACHJ,MAAM,CAAC,IAAIK,KAAK,CAAC,qBAAqB,CAAC,CAAC;MAC5C;IACJ,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}