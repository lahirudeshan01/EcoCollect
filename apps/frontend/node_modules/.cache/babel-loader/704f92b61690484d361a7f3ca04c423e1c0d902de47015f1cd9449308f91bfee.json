{"ast":null,"code":"// Mock fetchPaymentHistory function for payments page\nexport async function fetchPaymentHistory() {\n  // Simulate API call delay and return mock data\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve([{\n        date: '2025-10-01',\n        type: 'Charge',\n        amount: 15.00,\n        status: 'Paid'\n      }, {\n        date: '2025-10-08',\n        type: 'Payback',\n        amount: 5.00,\n        status: 'Credited'\n      }, {\n        date: '2025-10-15',\n        type: 'Charge',\n        amount: 20.00,\n        status: 'Pending'\n      }]);\n    }, 500);\n  });\n}\n// Real fetchWasteHistory function for history page\nexport async function fetchWasteHistory() {\n  const token = localStorage.getItem('token');\n  const res = await fetch('/api/users/history', {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!res.ok) throw new Error('Failed to fetch waste history');\n  return await res.json();\n}\n// Mock login function for authentication\nexport async function login(email, password) {\n  // Simulate API call delay\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (email === 'resident@test.com' && password === '12345') {\n        resolve({\n          token: 'mock-token-123',\n          userId: '1',\n          name: 'Resident User'\n        });\n      } else {\n        reject(new Error('Invalid credentials'));\n      }\n    }, 500);\n  });\n}","map":{"version":3,"names":["fetchPaymentHistory","Promise","resolve","setTimeout","date","type","amount","status","fetchWasteHistory","token","localStorage","getItem","res","fetch","headers","ok","Error","json","login","email","password","reject","userId","name"],"sources":["C:/Users/HP/OneDrive/Documents/GitHub/EcoCollect/apps/frontend/src/services/api.js"],"sourcesContent":["// Mock fetchPaymentHistory function for payments page\r\nexport async function fetchPaymentHistory() {\r\n    // Simulate API call delay and return mock data\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve([\r\n                { date: '2025-10-01', type: 'Charge', amount: 15.00, status: 'Paid' },\r\n                { date: '2025-10-08', type: 'Payback', amount: 5.00, status: 'Credited' },\r\n                { date: '2025-10-15', type: 'Charge', amount: 20.00, status: 'Pending' }\r\n            ]);\r\n        }, 500);\r\n    });\r\n}\r\n// Real fetchWasteHistory function for history page\r\nexport async function fetchWasteHistory() {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch('/api/users/history', {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    if (!res.ok) throw new Error('Failed to fetch waste history');\r\n    return await res.json();\r\n}\r\n// Mock login function for authentication\r\nexport async function login(email, password) {\r\n    // Simulate API call delay\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (email === 'resident@test.com' && password === '12345') {\r\n                resolve({\r\n                    token: 'mock-token-123',\r\n                    userId: '1',\r\n                    name: 'Resident User'\r\n                });\r\n            } else {\r\n                reject(new Error('Invalid credentials'));\r\n            }\r\n        }, 500);\r\n    });\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,mBAAmBA,CAAA,EAAG;EACxC;EACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAM;MACbD,OAAO,CAAC,CACJ;QAAEE,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE,QAAQ;QAAEC,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAO,CAAC,EACrE;QAAEH,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAW,CAAC,EACzE;QAAEH,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE,QAAQ;QAAEC,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAU,CAAC,CAC3E,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN;AACA;AACA,OAAO,eAAeC,iBAAiBA,CAAA,EAAG;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;IAC1CC,OAAO,EAAE;MACL,eAAe,EAAE,UAAUL,KAAK,EAAE;MAClC,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACF,IAAI,CAACG,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAO,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;AAC3B;AACA;AACA,OAAO,eAAeC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACzC;EACA,OAAO,IAAInB,OAAO,CAAC,CAACC,OAAO,EAAEmB,MAAM,KAAK;IACpClB,UAAU,CAAC,MAAM;MACb,IAAIgB,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,OAAO,EAAE;QACvDlB,OAAO,CAAC;UACJO,KAAK,EAAE,gBAAgB;UACvBa,MAAM,EAAE,GAAG;UACXC,IAAI,EAAE;QACV,CAAC,CAAC;MACN,CAAC,MAAM;QACHF,MAAM,CAAC,IAAIL,KAAK,CAAC,qBAAqB,CAAC,CAAC;MAC5C;IACJ,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}