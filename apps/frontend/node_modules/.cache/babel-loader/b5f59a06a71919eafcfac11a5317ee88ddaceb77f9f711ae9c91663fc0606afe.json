{"ast":null,"code":"export const requestPickup = async formData => {\n  const response = await fetch('http://localhost:5000/api/pickups', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData)\n  });\n  if (!response.ok) throw new Error('Failed to fetch');\n  return response.json();\n};\nexport const fetchDashboardData = async () => {\n  const response = await fetch('http://localhost:5000/api/pickups');\n  if (!response.ok) throw new Error('Failed to fetch pickups');\n  return response.json();\n};","map":{"version":3,"names":["requestPickup","formData","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","fetchDashboardData"],"sources":["C:/Users/HP/OneDrive/Documents/GitHub/EcoCollect/apps/frontend/src/pages/dashboard.js"],"sourcesContent":["export const requestPickup = async (formData) => {\r\n  const response = await fetch('http://localhost:5000/api/pickups', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(formData)\r\n  });\r\n\r\n  if (!response.ok) throw new Error('Failed to fetch');\r\n  return response.json();\r\n};\r\n\r\nexport const fetchDashboardData = async () => {\r\n  const response = await fetch('http://localhost:5000/api/pickups');\r\n  if (!response.ok) throw new Error('Failed to fetch pickups');\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;IAChEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpD,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EACjE,IAAI,CAACD,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5D,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}