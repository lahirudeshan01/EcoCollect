{"ast":null,"code":"// services/api.js\n\n// Backend base URL\nconst BASE_URL = \"http://localhost:5001/api\";\n\n// ------------------- Payments -------------------\n\n// Fetch payment history (real)\nexport async function fetchPaymentHistory() {\n  const res = await fetch(`${BASE_URL}/payments`);\n  if (!res.ok) {\n    throw new Error(\"Failed to fetch payment history\");\n  }\n  return await res.json();\n}\n\n// Add a new payment\nexport async function addPayment(paymentData) {\n  const res = await fetch(`${BASE_URL}/payments`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(paymentData)\n  });\n  if (!res.ok) {\n    const errorData = await res.json().catch(() => ({}));\n    throw new Error(errorData.message || \"Failed to add payment\");\n  }\n  return res.json();\n}\n\n// ------------------- Waste History -------------------\n\nexport async function fetchWasteHistory() {\n  const token = localStorage.getItem(\"token\");\n  const res = await fetch(\"/api/users/history\", {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch waste history\");\n  return await res.json();\n}\n\n// ------------------- Authentication -------------------\n\nexport async function login(email, password) {\n  var _data$user, _data$user2;\n  const res = await fetch(\"/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!res.ok) {\n    const err = await res.json().catch(() => ({}));\n    throw new Error(err.message || \"Login failed\");\n  }\n  const data = await res.json();\n  return {\n    token: data.token,\n    userId: (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id,\n    name: ((_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.name) || \"Resident\"\n  };\n}\nexport async function register(name, email, password) {\n  const res = await fetch(\"/api/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n  if (!res.ok) {\n    const err = await res.json().catch(() => ({}));\n    throw new Error(err.message || \"Registration failed\");\n  }\n  return await res.json();\n}","map":{"version":3,"names":["BASE_URL","fetchPaymentHistory","res","fetch","ok","Error","json","addPayment","paymentData","method","headers","body","JSON","stringify","errorData","catch","message","fetchWasteHistory","token","localStorage","getItem","Authorization","login","email","password","_data$user","_data$user2","err","data","userId","user","id","name","register"],"sources":["C:/Users/HP/OneDrive/Documents/GitHub/EcoCollect/apps/frontend/src/services/api.js"],"sourcesContent":["// services/api.js\r\n\r\n// Backend base URL\r\nconst BASE_URL = \"http://localhost:5001/api\";\r\n\r\n// ------------------- Payments -------------------\r\n\r\n// Fetch payment history (real)\r\nexport async function fetchPaymentHistory() {\r\n    const res = await fetch(`${BASE_URL}/payments`);\r\n    if (!res.ok) {\r\n        throw new Error(\"Failed to fetch payment history\");\r\n    }\r\n    return await res.json();\r\n}\r\n\r\n// Add a new payment\r\nexport async function addPayment(paymentData) {\r\n    const res = await fetch(`${BASE_URL}/payments`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(paymentData),\r\n    });\r\n\r\n    if (!res.ok) {\r\n        const errorData = await res.json().catch(() => ({}));\r\n        throw new Error(errorData.message || \"Failed to add payment\");\r\n    }\r\n\r\n    return res.json();\r\n}\r\n\r\n// ------------------- Waste History -------------------\r\n\r\nexport async function fetchWasteHistory() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await fetch(\"/api/users/history\", {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n    if (!res.ok) throw new Error(\"Failed to fetch waste history\");\r\n    return await res.json();\r\n}\r\n\r\n// ------------------- Authentication -------------------\r\n\r\nexport async function login(email, password) {\r\n    const res = await fetch(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n    });\r\n    if (!res.ok) {\r\n        const err = await res.json().catch(() => ({}));\r\n        throw new Error(err.message || \"Login failed\");\r\n    }\r\n    const data = await res.json();\r\n    return {\r\n        token: data.token,\r\n        userId: data.user?.id,\r\n        name: data.user?.name || \"Resident\",\r\n    };\r\n}\r\n\r\nexport async function register(name, email, password) {\r\n    const res = await fetch(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name, email, password }),\r\n    });\r\n    if (!res.ok) {\r\n        const err = await res.json().catch(() => ({}));\r\n        throw new Error(err.message || \"Registration failed\");\r\n    }\r\n    return await res.json();\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}