{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\GitHub\\\\EcoCollect\\\\apps\\\\frontend\\\\src\\\\components\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { login as apiLogin } from '../../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const name = localStorage.getItem('name');\n    if (token && userId) {\n      setUser({\n        id: userId,\n        name: name || 'Resident'\n      });\n    }\n  }, []);\n  const signIn = async (email, password) => {\n    try {\n      const data = await apiLogin(email, password);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userId', data.userId);\n      localStorage.setItem('name', data.name || 'Resident');\n      setUser({\n        id: data.userId,\n        name: data.name || 'Resident'\n      });\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Invalid email or password.');\n    }\n  };\n  const signOut = () => {\n    localStorage.clear();\n    setUser(null);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","login","apiLogin","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","localStorage","getItem","userId","name","id","signIn","email","password","data","setItem","error","console","alert","signOut","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/GitHub/EcoCollect/apps/frontend/src/components/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { login as apiLogin } from '../../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n        const name = localStorage.getItem('name');\r\n        if (token && userId) {\r\n            setUser({ id: userId, name: name || 'Resident' });\r\n        }\r\n    }, []);\r\n\r\n    const signIn = async (email, password) => {\r\n        try {\r\n            const data = await apiLogin(email, password);\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('userId', data.userId);\r\n            localStorage.setItem('name', data.name || 'Resident');\r\n            setUser({ id: data.userId, name: data.name || 'Resident' });\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            alert('Invalid email or password.');\r\n        }\r\n    };\r\n\r\n    const signOut = () => {\r\n        localStorage.clear();\r\n        setUser(null);\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, signIn, signOut }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,KAAK,IAAIC,QAAQ,QAAQ,oBAAoB;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAME,IAAI,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,KAAK,IAAIG,MAAM,EAAE;MACjBL,OAAO,CAAC;QAAEO,EAAE,EAAEF,MAAM;QAAEC,IAAI,EAAEA,IAAI,IAAI;MAAW,CAAC,CAAC;IACrD;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMpB,QAAQ,CAACkB,KAAK,EAAEC,QAAQ,CAAC;MAC5CP,YAAY,CAACS,OAAO,CAAC,OAAO,EAAED,IAAI,CAACT,KAAK,CAAC;MACzCC,YAAY,CAACS,OAAO,CAAC,QAAQ,EAAED,IAAI,CAACN,MAAM,CAAC;MAC3CF,YAAY,CAACS,OAAO,CAAC,MAAM,EAAED,IAAI,CAACL,IAAI,IAAI,UAAU,CAAC;MACrDN,OAAO,CAAC;QAAEO,EAAE,EAAEI,IAAI,CAACN,MAAM;QAAEC,IAAI,EAAEK,IAAI,CAACL,IAAI,IAAI;MAAW,CAAC,CAAC;MAC3DL,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCE,KAAK,CAAC,4BAA4B,CAAC;IACvC;EACJ,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBb,YAAY,CAACc,KAAK,CAAC,CAAC;IACpBjB,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAES,MAAM;MAAEQ;IAAQ,CAAE;IAAAnB,QAAA,EAClDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CAtCWF,YAAY;EAAA,QAEJJ,WAAW;AAAA;AAAAgC,EAAA,GAFnB5B,YAAY;AAwCzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACO,WAAW,CAAC;AAAA;AAAC+B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}